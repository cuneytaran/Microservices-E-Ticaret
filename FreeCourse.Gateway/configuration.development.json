{
  //BURDAKİ TANIMLAMA İŞLEMİ BİTTİKTEN SONRA İLGİLİ PROJENİN Program.cs kısmına git.
  //IDENTITY SERVER GATEWAY İÇİNDEN GEÇMEZ!!!!!
  //GATEWAY KORUMA ALTINA ALINIR!!!!
  //Manage Packeges den Ocelot aratıp yükle
  //program.cs de düzenleme yap
  //configuration.development.json adında bir add - item den  json file ekle
  //Ocelot kullanabilmek için Startup.cs e git
  //Startup.cs de ConfigureServices e git
  //services.AddOcelot(); ekle
  //Startup.cs de Configure e git
  //app.UseOcelot().Wait(); ekle
  //Ocelot.json dosyası oluştur
  //Ocelot.json dosyası içine aşağıdaki kodları yaz
  //Ocelot.json dosyası içindeki kodları açıklamalarıyla birlikte incele



  "Routes": [ //Bu tüm microservislerin üstündeymiş gibi düşün. bu yüzden UpstreamPathTemplate clinetler buraya istek yapacak. DownstreamPathTemplate gelen isteği aşağıdaki gerekli apiye yönlendirecek.
    {
      //****************************************************************************************************
      "DownstreamPathTemplate": "/api/{everything}", //DownstreamPathTemplate= API gatewayden ilgili microservise gidecek olan url. Gelen isteği gerekli apiye yönlendiriyor
      //{everything}=ocelottan sonra api den sonra ne gönderilirse Downstream deki mikroservisin ayağa kalktığı path e gönder.
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost", //development ortamında olduğu için localhost
          "Port": 5011
        }
      ],
      "UpstreamPathTemplate": "/services/catalog/{everything}", //UpstreamPathTemplate=API gatewaye gelen url. Herhangi bir client buraya istek yapıyor.
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "GatewayAuthenticationScheme", //startupdaki configurasyondaki key ile aynı olmak zorunda.‘AuthenticationProviderKey’ alanı ile hangi şema üzerinden kimlik doğrulama işlemi yapılacağı bildirilmektedir.
        "AllowedScopes": [ "catalog_fullpermission" ] //gelen istek bu isimde yer alıp almadığını bakıyor. yoksa geri döndürecek işlemi devam ettirmeyecek.  yani izin verilen scop dosyasına bakıyor.
      }
    },
    //****************************************************************************************************

    {
      "DownstreamPathTemplate": "/api/{everything}", //http://localhost:5000/api/.... gibi düşün
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5012
        }
      ],
      "UpstreamPathTemplate": "/services/photostock/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "GatewayAuthenticationScheme",
        "AllowedScopes": [ "photo_stock_fullpermission" ]
      }
    },

    //****************************************************************************************************
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5013
        }
      ],
      "UpstreamPathTemplate": "/services/basket/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "GatewayAuthenticationScheme",
        "AllowedScopes": [ "basket_fullpermission" ]
      }
    },

    //****************************************************************************************************
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5014
        }
      ],
      "UpstreamPathTemplate": "/services/discount/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "DelegatingHandlers": [ "TokenExhangeDelegateHandler" ], //AllowedScopes sildik çünkü burda token exchange işlemini TokenExhangeDelegateHandler clasında yapacağız. yani tokeni alıp başka bir token oluşturacağız.TokenExhangeDelegateHandler  geçerek  yoluna devam edecek.
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "GatewayAuthenticationScheme"
      }
    },

    //****************************************************************************************************
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5015
        }
      ],
      "UpstreamPathTemplate": "/services/order/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "GatewayAuthenticationScheme",
        "AllowedScopes": [ "order_fullpermission" ]
      }
    },

    //****************************************************************************************************
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5016
        }
      ],
      "UpstreamPathTemplate": "/services/fakepayment/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "DelegatingHandlers": [ "TokenExhangeDelegateHandler" ], //AllowedScopes sildik çünkü burda token exchange işlemini TokenExhangeDelegateHandler clasında yapacağız. yani tokeni alıp başka bir token oluşturacağız.TokenExhangeDelegateHandler  geçerek  yoluna devam edecek.
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "GatewayAuthenticationScheme"
      }
    }

    //****************************************************************************************************
  ],
  "GlobalConfiguration": {
    "BaseUrl": "http://localhost:5000" //API Gateway in ayakta olacağı url
  }
}